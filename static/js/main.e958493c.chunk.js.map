{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authactions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Notification.js","components/dashboard/Dashboard.js","components/project/ProjectDetails.js","store/actions/projectAction.js","components/auth/SignIn.js","components/auth/SignUp.js","components/project/CreateProject.js","components/project/EditProject.js","App.js","registerServiceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","console","log","profile","initials","className","to","onClick","SignedOutLinks","state","firebase","links","uid","ProjectSummary","project","title","authorFirstName","authorLastName","Date","createdAt","seconds","toString","ProjectList","projects","userid","map","authorId","id","Notification","compose","firestore","ordered","firestoreConnect","collection","ownProps","match","params","data","deleteProject","docid","getFirestore","doc","delete","catch","err","pid","class","content","e","alert","history","push","autherror","authError","signIn","creds","credentials","signInWithEmailAndPassword","email","password","useState","setState","handleChange","target","value","onSubmit","preventDefault","handleSubmit","htmlFor","onChange","signUp","userdata","newUser","createUserWithEmailAndPassword","resp","user","set","firstName","lastName","required","createProject","add","setstate","updatemessage","editProject","update","tt","cc","useEffect","App","exact","path","component","Dashboard","EditProject","ProjectDetails","SignIn","SignUp","CreateProject","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","initState","authReducer","action","message","projectReducer","deletemessage","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e958493c.chunk.js","sourcesContent":["import React, { Profiler } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authactions'\r\n\r\nconst SignedInLinks = (props) => {\r\n  console.log('insin',props.profile.initials)\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/create'>New Project</NavLink></li>\r\n        <li><a onClick={props.signOut}> Log Out</a></li>\r\n        <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=> {\r\n return {\r\n   signOut: ()=> dispatch(signOut())\r\n }\r\n}\r\nexport default connect (null,mapDispatchToProps)(SignedInLinks)","\r\n\r\nexport const signIn = (credentials) => {\r\n\r\n    console.log(credentials)\r\n    return (dispatch,getState,{getFirebase}) => {\r\n        const firebase=getFirebase()\r\n        firebase.auth().signInWithEmailAndPassword(credentials.email,credentials.password).then( ()=>{\r\n                dispatch({type:'LOGIN_SUCCESS'})\r\n        }).catch( (err) => {\r\n            dispatch({type:'LOGIN_ERROR',err})\r\n        } )\r\n        \r\n    \r\n    }\r\n}\r\n\r\nexport const signOut = (credentials) => {\r\n    return (dispatch,getState,{getFirebase}) => {\r\n        const firebase=getFirebase()\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type:'LOGOUT_SUCCESS'})\r\n    })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    \r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n      const firebase = getFirebase();\r\n      const firestore = getFirestore();\r\n  \r\n      firebase.auth().createUserWithEmailAndPassword(\r\n        newUser.email, \r\n        newUser.password\r\n      ).then(resp => {\r\n        return firestore.collection('users').doc(resp.user.uid).set({\r\n          firstName: newUser.firstName,\r\n          lastName: newUser.lastName,\r\n          initials: newUser.firstName[0] + newUser.lastName[0]\r\n        });\r\n      }).then(() => {\r\n        dispatch( { type: 'SIGNUP_SUCCESS' } );\r\n      }).catch((err) => {\r\n        dispatch( { type: 'SIGNUP_ERROR', err} );\r\n      });\r\n    } \r\n\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <div>\r\n      <ul className=\"right\">\r\n        <li><NavLink to='/signup'>Signup</NavLink></li>\r\n        <li><NavLink to='/signin'>Login</NavLink></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignedOutLinks","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux'\r\nconst Navbar = (props) => {\r\n  const { auth , profile} = props\r\n \r\n  const links= auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to='/' className=\"brand-logo\">UserNotes</Link>\r\n        {links}\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n  auth: state.firebase.auth,\r\n  profile:state.firebase.profile \r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\n\r\n\r\nconst ProjectSummary = ({project}) => {\r\n\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title \">{project.title}</span>\r\n        \r\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n        <p className=\"grey-text\">{new Date(project.createdAt.seconds * 1000).toString()}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\nconst ProjectList = ( {projects,userid} ) => {\r\n  \r\n  return (\r\n    <div className=\"project-list section\">\r\n      { projects && projects.map(project => {\r\n       \r\n        if(project.authorId==userid){\r\n        return (\r\n          <Link to={'/project/'+project.id}> \r\n          <ProjectSummary project={project} key={project.id} />\r\n          </Link>\r\n        )\r\n        }\r\n      })}  \r\n\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default ProjectList","import React from 'react'\r\n\r\nconst Notification = () => {\r\n  return (\r\n    <div>\r\n      <p>Notifications</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\nimport ProjectList from '../project/ProjectList'\r\nimport Notifications from './Notification'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router'\r\nconst Dashboard = (props) => {\r\n\r\n    const { projects , auth} = props;\r\n    console.log(auth.uid)\r\n    if (!auth.uid) return <Redirect to='/signin' /> \r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} userid={auth.uid} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-m1\">\r\n            <Notifications />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth:state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'projects' }\r\n  ])\r\n)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router' \r\nimport { Link } from 'react-router-dom'\r\nimport { deleteProject } from '../../store/actions/projectAction'\r\n\r\nconst ProjectDetails = (props) => {\r\n  const {auth}= props\r\n  if (!auth.uid) return <Redirect to='/signin' /> \r\n  const { project } = props;\r\n  console.log(project,'details');\r\n  const {id} = props\r\n  \r\n  \r\n  if (project) {\r\n    const deletethisproject= (e) => {\r\n      alert('do you want to delete this?')\r\n      console.log('its clicked',id);\r\n      props.deleteProject(id)\r\n      props.history.push('/');\r\n    }\r\n    return (\r\n    <div className=\"container section project-details\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n        <span className=\"edit-card\">\r\n        <Link className=\"edit-project\" pid={id} to={'/edit/'+id}> \r\n       \r\n        <i class=\"material-icons left\">edit</i>\r\n        </Link>\r\n         </span>\r\n          <span className=\"card-title\"> { project.title }</span>\r\n          \r\n        <p> { project.content }</p>\r\n        \r\n        </div>\r\n        <div className=\"card-action grey lighten-4 grey-text\">\r\n          <div>Created by: {project.authorFirstName}</div>\r\n          <div> Created at:{new Date(project.createdAt.seconds * 1000).toString()} \r\n          <span onClick={ (e)=>{deletethisproject(e)} } pid={id} className='deleteproject'><i class=\"material-icons left\">delete</i></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n    } \r\n      else {\r\n        return (\r\n          <div className=\"container center\">\r\n            <p>Loading project...</p>\r\n          </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state,ownProps) => {\r\n   \r\n   const id = ownProps.match.params.id;\r\n   const projects = state.firestore.data.projects;\r\n  \r\n   const project = projects ? projects[id] : null\r\n   \r\n   return {\r\n     id:id,\r\n     project: project,\r\n     auth:state.firebase.auth\r\n   }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteProject: (id) => dispatch(deleteProject(id))\r\n  }\r\n}\r\nexport default compose(\r\n  connect(mapStateToProps,mapDispatchToProps),\r\n  firestoreConnect([{\r\n    collection: 'projects'\r\n  }])\r\n)(ProjectDetails)","export const createProject = (project) => {\r\n    return (dispatch, getState,{ getFirebase,getFirestore }) => {\r\n      // make async call to database\r\n      const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n      firestore.collection('projects').add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n      }).then(()=> {\r\n              dispatch({ type: 'CREATE_PROJECT', project });\r\n      }).catch( (err)=> {\r\n              dispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n      })\r\n      \r\n    }\r\n  };\r\n\r\n  export const editProject = (project) => {\r\n      console.log(project,'here in action')\r\n    return (dispatch, getState,{getFirebase,getFirestore }) => {\r\n      // make async call to database\r\n      const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    const docRef = firestore.collection('projects').doc(project.docid)\r\n    docRef\r\n    .update({\r\n      title: project.title,\r\n      content:project.content\r\n    }).then(()=> {\r\n              dispatch({ type: 'UPDATE_PROJECT', project });\r\n      }).catch( (err)=> {\r\n              dispatch({ type: 'UPDATE_PROJECT_ERROR', err });\r\n      })\r\n      \r\n    }\r\n  };\r\n\r\n  \r\n  export const deleteProject = (docid) => {\r\n    console.log(docid,'here in deleteaction')\r\n  return (dispatch, getState,{getFirebase,getFirestore }) => {\r\n    // make async call to database\r\n    const firestore = getFirestore();\r\n  const profile = getState().firebase.profile;\r\n  const authorId = getState().firebase.auth.uid;\r\n  const docRef = firestore.collection('projects').doc(docid)\r\n  docRef.delete().then(()=> {\r\n            dispatch({ type: 'DELETE_PROJECT', docid });\r\n    }).catch( (err)=> {\r\n            dispatch({ type: 'DELETE_PROJECT_ERROR', err });\r\n    })\r\n    \r\n  }\r\n};","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {signIn} from '../../store/actions/authactions'\r\nimport  { useState } from 'react';\r\nimport { Redirect } from 'react-router'\r\nconst SignIn = (props)=> {\r\n\r\n\r\n  const [creds, setState] = useState({email:'',password:''});\r\n  const {autherror}=props\r\n  const handleChange = (e) => {\r\n    \r\n    setState({\r\n     ...creds,[e.target.id]: e.target.value\r\n    })\r\n    \r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.signIn(creds)\r\n  }\r\n  const { auth } = props\r\nif (auth.uid) return <Redirect to='/' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={ (e)=> {handleSubmit(e)}}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id='email' onChange={ (e)=>{handleChange(e)} } />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={ (e)=>{handleChange(e)} }/>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n          </div>\r\n          <div className=\"red-text center\">\r\n          {autherror}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  \r\n    \r\n}\r\n\r\nconst mapStateToProps= ( state ) => {\r\n  return {\r\n    autherror: state.auth.authError,\r\n    auth:state.firebase.auth\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps= (dispatch) => {\r\nreturn {\r\n  signIn: (creds) => {dispatch(signIn(creds))}\r\n}\r\n}\r\n \r\nexport default connect (mapStateToProps,mapDispatchToProps) (SignIn)","import React from 'react'\r\nimport { Redirect } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authactions'\r\nimport { useState } from 'react'\r\n \r\nconst SignUp = (props)=>{\r\n \r\n\r\n  const [userdata, setState] = useState({\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n  });\r\n  const handleChange = (e) => {\r\n    setState({\r\n      ...userdata,[e.target.id]: e.target.value\r\n     })\r\n    console.log(userdata);\r\n  }\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.signUp(userdata)\r\n    \r\n  }\r\n  const { auth ,authError} = props\r\n  console.log(authError,'sss')\r\n  if (auth.uid) return <Redirect to='/' /> \r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={ (e)=> {handleSubmit(e)}}>\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input required type=\"email\" id='email' onChange={ (e)=>{handleChange(e)} } />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id='password' onChange={ (e)=>{handleChange(e)} } />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id='firstName' onChange={ (e)=>{handleChange(e)} } />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id='lastName' onChange={ (e)=>{handleChange(e)} } />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n          </div>\r\n          <div className=\"red-text center\">\r\n          {authError}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\nconst mapStateToProps= ( state ) => {\r\n  return {\r\n    auth:state.firebase.auth,\r\n    authError: state.auth.authError,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps= (dispatch) => {\r\n  return {\r\n    signUp: (userdata) => {dispatch(signUp(userdata))}\r\n  }\r\n  }\r\n\r\n \r\nexport default connect (mapStateToProps,mapDispatchToProps) (SignUp)","import { connect} from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectAction'\r\nimport React, { useState } from 'react';\r\n\r\nimport { Redirect } from 'react-router'\r\n\r\n const CreateProject = (props) => {\r\n   \r\n   const [state, setstate] = useState( {title:'',\r\n   content:''})\r\n   \r\n  const handleChange = (e) => {\r\n    console.log(state)\r\n    //console.log(e.target.value,e.target.id)\r\n   \r\n    setstate({...state,[e.target.id]: e.target.value})\r\n   \r\n    console.log(state)\r\n  }\r\n  const handleSubmit = (e) => {\r\n   console.log('in')\r\n    e.preventDefault();\r\n     console.log(state);\r\n    props.createProject(state);\r\n    props.history.push('/');\r\n     \r\n  }\r\n  if (!props.auth.uid) return <Redirect to='/signin' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id='title' onChange={handleChange} />\r\n            <label htmlFor=\"title\">Project Title</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={handleChange}></textarea>\r\n            <label htmlFor=\"content\">Project Content</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state)=> {\r\nreturn{\r\n  auth:state.firebase.auth\r\n}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project))\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","import { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { editProject } from '../../store/actions/projectAction'\r\nimport React, { useEffect, useState } from 'react';\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router'\r\n\r\n\r\n const EditProject = (props) => {\r\n     \r\n   \r\n    const { project } = props\r\n\r\n    const { docid } = props\r\n    const {updatemessage}= props\r\n    console.log(updatemessage,'message')\r\n    var tt =''\r\n    var cc =''\r\n    if(project){\r\n         tt = project.title\r\n         cc = project.content\r\n    }\r\n    \r\n    console.log(tt,'chcking time')\r\n    const  [state, setstate] = useState( {title:tt,\r\n    content:cc, docid:docid})\r\n    useEffect(() => {\r\n        \r\n        setstate({...state,'title': tt,'content':cc })\r\n        \r\n    }, [tt])\r\n    if (!props.auth.uid )  return <Redirect to='/signin' />\r\n    \r\n    const handleChange = (e) => {\r\n        setstate({...state,[e.target.id]: e.target.value})\r\n      \r\n    } \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(state,'after submit');\r\n       props.editProject(state);\r\n        \r\n       props.history.push('/');\r\n        \r\n    }\r\n \r\n  if(project){\r\n    return (\r\n      <div className=\"container\">\r\n        <form className=\"white\" onSubmit={handleSubmit}>\r\n          <h5 className=\"grey-text text-darken-3\">Edit Project</h5>\r\n          <div className=\"input-field\">\r\n            <input type=\"text\" id='title'  value={state.title}  onChange={handleChange} />\r\n            <label htmlFor=\"title\">Project Title</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <textarea id=\"content\" value={state.content}  className=\"materialize-textarea\" onChange={handleChange}></textarea>\r\n            <label htmlFor=\"content\">Project Content</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1\">Update</button>\r\n          </div>\r\n          <div className=\"red-text center\">\r\n          {updatemessage}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n    }\r\n    else {\r\n        return (\r\n          <div className=\"container center\">\r\n            <p>Loading project...</p>\r\n          </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state,ownProps)=> {\r\n    console.log('here state',state)\r\nconst id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null    \r\n    return {\r\n        docid:id,\r\n        auth:state.firebase.auth,\r\n        project:project,\r\n        updatemessage:state.project.updatemessage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      editProject: (project) => dispatch(editProject(project))\r\n    }\r\n  }\r\n\r\n\r\n  export default compose(\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n      ]),\r\n      \r\n    connect(mapStateToProps,mapDispatchToProps)\r\n    \r\n  )(EditProject)","import {BrowserRouter as Router,Route,Switch} from 'react-router-dom'\r\nimport Navbar from './components/layout/Navbar'\r\nimport Dashboard from './components/dashboard/Dashboard'\r\nimport ProjectDetails from './components/project/ProjectDetails'\r\nimport SignIn from './components/auth/SignIn'\r\nimport SignUp from './components/auth/SignUp'\r\nimport CreateProject from './components/project/CreateProject'\r\nimport EditProject from './components/project/EditProject'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path='/'component={Dashboard} />\r\n        <Route path='/edit/:id' component={EditProject} />\r\n        <Route path='/project/:id' component={ProjectDetails} />\r\n        <Route path='/signin' component={SignIn} />\r\n        <Route path='/signup' component={SignUp} />\r\n        <Route path='/create' component={CreateProject} />\r\n      </Switch>\r\n    </div>\r\n  </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export default function register() {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Lets check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not local host. Just register service worker\r\n          registerValidSW(swUrl);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a \"New content is\r\n                // available; please refresh.\" message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        if (\r\n          response.status === 404 ||\r\n          response.headers.get('content-type').indexOf('javascript') === -1\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","const initState = {\r\n    authError:null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n      case 'LOGIN_SUCCESS':\r\n        console.log('login sunceess');\r\n        return {\r\n            ...state,\r\n            authError:'Login'\r\n        }\r\n        \r\n      case 'LOGIN_ERROR':\r\n       return {\r\n           ...state,\r\n           authError:'Login error'\r\n       }\r\n       case 'LOGOUT_SUCCESS' :\r\n        console.log('logout success')\r\n       return {\r\n        state\r\n       }\r\n       case 'SIGNOUT_SUCCESS':\r\n        console.log('signout success');\r\n        return state;\r\n  \r\n      case 'SIGNUP_SUCCESS':\r\n        console.log('signup success')\r\n        return {\r\n          ...state,\r\n          authError: null\r\n        }\r\n  \r\n      case 'SIGNUP_ERROR':\r\n        console.log('signup errossr',action.err.message)\r\n        return {\r\n          ...state,\r\n          authError: action.err.message\r\n        }\r\n       \r\n       default: \r\n       return state;\r\n\r\n    }\r\n   \r\n  };\r\n  \r\n  export default authReducer;\r\n","const initState = {\r\n    \r\n  }\r\n  \r\n  const projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n      case 'CREATE_PROJECT':\r\n        console.log('created', action);\r\n        return state;\r\n\r\n        case 'DELETE_PROJECT':\r\n          console.log('Deleted', action);\r\n          return {...state,\r\n            deletemessage:'deleted successfully'};\r\n\r\n            case 'DELETE_PROJECT_ERROR':\r\n              console.log('Error', action.docid);\r\n              return {...state,\r\n                deletemessage:'Error'};\r\n        case 'UPDATE_PROJECT':\r\n          \r\n          return {...state,\r\n            updatemessage:'updated successfully'};\r\n\r\n          case 'UPDATE_PROJECT_ERROR':\r\n           \r\n            return {...state,\r\n              updatemessage:'Error in update'};\r\n           \r\n      case 'CREATE_PROJECT_ERROR':\r\n       console.log('create project error', action.project);\r\n       return {...state,\r\n        updatemessage:'error in update'};\r\n       default: \r\n       return state;\r\n\r\n    }\r\n   \r\n  };\r\n  \r\n  export default projectReducer;\r\n","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBJqYaqXoqVEDoawA_BMxKDmLDLcz502BU\",\r\n  authDomain: \"reactapp-b8d54.firebaseapp.com\",\r\n  projectId: \"reactapp-b8d54\",\r\n  storageBucket: \"reactapp-b8d54.appspot.com\",\r\n  messagingSenderId: \"925632043055\",\r\n  appId: \"1:925632043055:web:e2c2356e082abc3ef88eda\"\r\n};\r\nfirebase.initializeApp (firebaseConfig)\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport default firebase","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nimport { createStore, applyMiddleware , compose} from 'redux'\r\nimport rootReducer from './store/reducers/rootReducer'\r\nimport { Provider ,useSelector} from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport {createFirestoreInstance, reduxFirestore,getFirestore } from 'redux-firestore'\r\nimport { reactReduxFirebase,getFirebase,ReactReduxFirebaseProvider } from 'react-redux-firebase'\r\nimport firebaseConfig from './config/fbConfig.js'\r\n\r\nimport firebase from 'firebase/app'\r\nimport { isLoaded } from \"react-redux-firebase\"\r\n\r\n\r\nconst store = createStore(rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\r\n     // redux binding for firebase\r\n     //reactReduxFirebase(firebase, {userProfile: 'users', useFirestoreForProfile: true}),\r\n    reduxFirestore(firebase, firebaseConfig) // redux bindings for firestore\r\n  )\r\n);\r\nconst rrfConfig = {\r\n  userProfile: 'users',\r\n  useFirestoreForProfile: true\r\n}\r\nconst rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,firebaseConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance\r\n};\r\n\r\nfunction AuthIsLoaded({ children }) {  \r\n  const auth = useSelector((state) => state.firebase.auth);   if\r\n  (!isLoaded(auth))\r\n      return (\r\n        <span>Loading </span>\r\n      );   \r\n  return children; } \r\n\r\n\r\nReactDOM.render(<Provider store={store}>     \r\n<ReactReduxFirebaseProvider {...rrfProps}>\r\n<AuthIsLoaded>\r\n        <App />\r\n </AuthIsLoaded>\r\n      </ReactReduxFirebaseProvider>  \r\n</Provider>, document.getElementById('root'));\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}